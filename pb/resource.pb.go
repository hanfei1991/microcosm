// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: resource.proto

package pb

import (
	fmt "fmt"
	io "io"
	math "math"
	math_bits "math/bits"

	proto "github.com/gogo/protobuf/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ResourceErrorCode int32

const (
	ResourceErrorCode_ResourceUnknownError ResourceErrorCode = 0
	ResourceErrorCode_ResourceOK           ResourceErrorCode = 1
	ResourceErrorCode_ResourceNoQuota      ResourceErrorCode = 2
	ResourceErrorCode_ResourceNotFound     ResourceErrorCode = 3
	ResourceErrorCode_ResourceDuplicate    ResourceErrorCode = 4
)

var ResourceErrorCode_name = map[int32]string{
	0: "ResourceUnknownError",
	1: "ResourceOK",
	2: "ResourceNoQuota",
	3: "ResourceNotFound",
	4: "ResourceDuplicate",
}

var ResourceErrorCode_value = map[string]int32{
	"ResourceUnknownError": 0,
	"ResourceOK":           1,
	"ResourceNoQuota":      2,
	"ResourceNotFound":     3,
	"ResourceDuplicate":    4,
}

func (x ResourceErrorCode) String() string {
	return proto.EnumName(ResourceErrorCode_name, int32(x))
}

func (ResourceErrorCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d1b72f771c35e3b8, []int{0}
}

type ResourceLeaseType int32

const (
	ResourceLeaseType_UnknownLeaseType  ResourceLeaseType = 0
	ResourceLeaseType_LeaseBindToWorker ResourceLeaseType = 1
	ResourceLeaseType_LeaseBindToJob    ResourceLeaseType = 2
	ResourceLeaseType_LeaseTimeout      ResourceLeaseType = 3
)

var ResourceLeaseType_name = map[int32]string{
	0: "UnknownLeaseType",
	1: "LeaseBindToWorker",
	2: "LeaseBindToJob",
	3: "LeaseTimeout",
}

var ResourceLeaseType_value = map[string]int32{
	"UnknownLeaseType":  0,
	"LeaseBindToWorker": 1,
	"LeaseBindToJob":    2,
	"LeaseTimeout":      3,
}

func (x ResourceLeaseType) String() string {
	return proto.EnumName(ResourceLeaseType_name, int32(x))
}

func (ResourceLeaseType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d1b72f771c35e3b8, []int{1}
}

type ResourceError struct {
	ErrorCode ResourceErrorCode `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3,enum=pb.ResourceErrorCode" json:"error_code,omitempty"`
	Message   string            `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	BaseError *Error            `protobuf:"bytes,3,opt,name=base_error,json=baseError,proto3" json:"base_error,omitempty"`
}

func (m *ResourceError) Reset()         { *m = ResourceError{} }
func (m *ResourceError) String() string { return proto.CompactTextString(m) }
func (*ResourceError) ProtoMessage()    {}
func (*ResourceError) Descriptor() ([]byte, []int) {
	return fileDescriptor_d1b72f771c35e3b8, []int{0}
}
func (m *ResourceError) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ResourceError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ResourceError.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ResourceError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceError.Merge(m, src)
}
func (m *ResourceError) XXX_Size() int {
	return m.Size()
}
func (m *ResourceError) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceError.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceError proto.InternalMessageInfo

func (m *ResourceError) GetErrorCode() ResourceErrorCode {
	if m != nil {
		return m.ErrorCode
	}
	return ResourceErrorCode_ResourceUnknownError
}

func (m *ResourceError) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ResourceError) GetBaseError() *Error {
	if m != nil {
		return m.BaseError
	}
	return nil
}

type CreateResourceRequest struct {
	ResourceId string `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	ExecutorId string `protobuf:"bytes,2,opt,name=executor_id,json=executorId,proto3" json:"executor_id,omitempty"`
	WorkerId   string `protobuf:"bytes,3,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	JobId      string `protobuf:"bytes,4,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
}

func (m *CreateResourceRequest) Reset()         { *m = CreateResourceRequest{} }
func (m *CreateResourceRequest) String() string { return proto.CompactTextString(m) }
func (*CreateResourceRequest) ProtoMessage()    {}
func (*CreateResourceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d1b72f771c35e3b8, []int{1}
}
func (m *CreateResourceRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateResourceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateResourceRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateResourceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateResourceRequest.Merge(m, src)
}
func (m *CreateResourceRequest) XXX_Size() int {
	return m.Size()
}
func (m *CreateResourceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateResourceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateResourceRequest proto.InternalMessageInfo

func (m *CreateResourceRequest) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

func (m *CreateResourceRequest) GetExecutorId() string {
	if m != nil {
		return m.ExecutorId
	}
	return ""
}

func (m *CreateResourceRequest) GetWorkerId() string {
	if m != nil {
		return m.WorkerId
	}
	return ""
}

func (m *CreateResourceRequest) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

type CreateResourceResponse struct {
	Error *ResourceError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (m *CreateResourceResponse) Reset()         { *m = CreateResourceResponse{} }
func (m *CreateResourceResponse) String() string { return proto.CompactTextString(m) }
func (*CreateResourceResponse) ProtoMessage()    {}
func (*CreateResourceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d1b72f771c35e3b8, []int{2}
}
func (m *CreateResourceResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateResourceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateResourceResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateResourceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateResourceResponse.Merge(m, src)
}
func (m *CreateResourceResponse) XXX_Size() int {
	return m.Size()
}
func (m *CreateResourceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateResourceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateResourceResponse proto.InternalMessageInfo

func (m *CreateResourceResponse) GetError() *ResourceError {
	if m != nil {
		return m.Error
	}
	return nil
}

type UpdateResourceRequest struct {
	ResourceId string            `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	WorkerId   string            `protobuf:"bytes,2,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	LeaseType  ResourceLeaseType `protobuf:"varint,3,opt,name=lease_type,json=leaseType,proto3,enum=pb.ResourceLeaseType" json:"lease_type,omitempty"`
}

func (m *UpdateResourceRequest) Reset()         { *m = UpdateResourceRequest{} }
func (m *UpdateResourceRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateResourceRequest) ProtoMessage()    {}
func (*UpdateResourceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d1b72f771c35e3b8, []int{3}
}
func (m *UpdateResourceRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpdateResourceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpdateResourceRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpdateResourceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateResourceRequest.Merge(m, src)
}
func (m *UpdateResourceRequest) XXX_Size() int {
	return m.Size()
}
func (m *UpdateResourceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateResourceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateResourceRequest proto.InternalMessageInfo

func (m *UpdateResourceRequest) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

func (m *UpdateResourceRequest) GetWorkerId() string {
	if m != nil {
		return m.WorkerId
	}
	return ""
}

func (m *UpdateResourceRequest) GetLeaseType() ResourceLeaseType {
	if m != nil {
		return m.LeaseType
	}
	return ResourceLeaseType_UnknownLeaseType
}

type UpdateResourceResponse struct {
	Error *ResourceError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (m *UpdateResourceResponse) Reset()         { *m = UpdateResourceResponse{} }
func (m *UpdateResourceResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateResourceResponse) ProtoMessage()    {}
func (*UpdateResourceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d1b72f771c35e3b8, []int{4}
}
func (m *UpdateResourceResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpdateResourceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpdateResourceResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpdateResourceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateResourceResponse.Merge(m, src)
}
func (m *UpdateResourceResponse) XXX_Size() int {
	return m.Size()
}
func (m *UpdateResourceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateResourceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateResourceResponse proto.InternalMessageInfo

func (m *UpdateResourceResponse) GetError() *ResourceError {
	if m != nil {
		return m.Error
	}
	return nil
}

func init() {
	proto.RegisterEnum("pb.ResourceErrorCode", ResourceErrorCode_name, ResourceErrorCode_value)
	proto.RegisterEnum("pb.ResourceLeaseType", ResourceLeaseType_name, ResourceLeaseType_value)
	proto.RegisterType((*ResourceError)(nil), "pb.ResourceError")
	proto.RegisterType((*CreateResourceRequest)(nil), "pb.CreateResourceRequest")
	proto.RegisterType((*CreateResourceResponse)(nil), "pb.CreateResourceResponse")
	proto.RegisterType((*UpdateResourceRequest)(nil), "pb.UpdateResourceRequest")
	proto.RegisterType((*UpdateResourceResponse)(nil), "pb.UpdateResourceResponse")
}

func init() { proto.RegisterFile("resource.proto", fileDescriptor_d1b72f771c35e3b8) }

var fileDescriptor_d1b72f771c35e3b8 = []byte{
	// 453 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x53, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0xf5, 0x3a, 0x6d, 0xc1, 0x13, 0x08, 0xdb, 0xa5, 0x46, 0x16, 0x48, 0x26, 0xca, 0x85, 0xa8,
	0x87, 0x1c, 0x4a, 0x7f, 0x80, 0x16, 0x90, 0x02, 0x08, 0x84, 0xd5, 0x8a, 0x63, 0x64, 0x67, 0x07,
	0x94, 0x36, 0xf5, 0x2c, 0xeb, 0xb5, 0x4a, 0x4f, 0x9c, 0x11, 0x42, 0xe2, 0xb3, 0x38, 0xf6, 0xc8,
	0x11, 0x25, 0x3f, 0x82, 0x76, 0xdd, 0x6d, 0xa8, 0x7b, 0xa2, 0xb7, 0x99, 0xf7, 0x9e, 0x67, 0xde,
	0x1b, 0xdb, 0xd0, 0xd3, 0x58, 0x51, 0xad, 0xa7, 0x38, 0x52, 0x9a, 0x0c, 0x89, 0x50, 0x15, 0x0f,
	0xbb, 0xa8, 0x35, 0xe9, 0x06, 0x18, 0x7c, 0x63, 0x70, 0x37, 0xbb, 0xd0, 0xbc, 0xb0, 0xb8, 0xd8,
	0x05, 0x70, 0x82, 0xc9, 0x94, 0x24, 0x26, 0xac, 0xcf, 0x86, 0xbd, 0x9d, 0x78, 0xa4, 0x8a, 0xd1,
	0x15, 0xd9, 0x3e, 0x49, 0xcc, 0x22, 0xf4, 0xa5, 0x48, 0xe0, 0xd6, 0x09, 0x56, 0x55, 0xfe, 0x09,
	0x93, 0xb0, 0xcf, 0x86, 0x51, 0xe6, 0x5b, 0x31, 0x04, 0x28, 0xf2, 0x0a, 0x27, 0x4e, 0x9b, 0x74,
	0xfa, 0x6c, 0xd8, 0xdd, 0x89, 0xec, 0x3c, 0x37, 0x27, 0x8b, 0x2c, 0xe9, 0xca, 0xc1, 0x0f, 0x06,
	0xf1, 0xbe, 0xc6, 0xdc, 0xa0, 0x5f, 0x95, 0xe1, 0xe7, 0x1a, 0x2b, 0x23, 0x1e, 0x43, 0xd7, 0x07,
	0x99, 0xcc, 0xa4, 0x33, 0x15, 0x65, 0xe0, 0xa1, 0xb1, 0xb4, 0x02, 0xfc, 0x82, 0xd3, 0xda, 0x90,
	0xb6, 0x82, 0xc6, 0x02, 0x78, 0x68, 0x2c, 0xc5, 0x23, 0x88, 0x4e, 0x49, 0x1f, 0xa3, 0xa3, 0x3b,
	0x8e, 0xbe, 0xdd, 0x00, 0x63, 0x29, 0x62, 0xd8, 0x38, 0xa2, 0xc2, 0x32, 0x6b, 0x8e, 0x59, 0x3f,
	0xa2, 0x62, 0x2c, 0x07, 0xcf, 0xe0, 0x41, 0xdb, 0x4e, 0xa5, 0xa8, 0xac, 0x50, 0x3c, 0x81, 0xf5,
	0x26, 0x0e, 0x73, 0x71, 0x36, 0xaf, 0x9d, 0x27, 0x6b, 0xf8, 0xc1, 0x77, 0x06, 0xf1, 0xa1, 0x92,
	0x37, 0x89, 0x74, 0xc5, 0x71, 0xd8, 0x72, 0xbc, 0x0b, 0x30, 0x47, 0x7b, 0x55, 0x73, 0xa6, 0xd0,
	0xe5, 0x69, 0xbd, 0xa4, 0x37, 0x96, 0x3d, 0x38, 0x53, 0x98, 0x45, 0x73, 0x5f, 0xda, 0x40, 0x6d,
	0x33, 0xff, 0x19, 0x68, 0xfb, 0x2b, 0x6c, 0x5e, 0xfb, 0x0e, 0x44, 0x02, 0x5b, 0x1e, 0x3c, 0x2c,
	0x8f, 0x4b, 0x3a, 0x2d, 0x1d, 0xc7, 0x03, 0xd1, 0x03, 0xf0, 0xcc, 0xbb, 0xd7, 0x9c, 0x89, 0xfb,
	0x70, 0xcf, 0xf7, 0x6f, 0xe9, 0x7d, 0x4d, 0x26, 0xe7, 0xa1, 0xd8, 0x02, 0xbe, 0x02, 0xcd, 0x4b,
	0xaa, 0x4b, 0xc9, 0x3b, 0x22, 0x5e, 0x6d, 0x7a, 0x5e, 0xab, 0xf9, 0x6c, 0x9a, 0x1b, 0xe4, 0x6b,
	0xdb, 0x1f, 0x57, 0xf0, 0x65, 0x46, 0x3b, 0xe1, 0x62, 0xf1, 0x25, 0xc6, 0x03, 0x3b, 0xc1, 0xb5,
	0x7b, 0xb3, 0x52, 0x1e, 0xd0, 0x07, 0x77, 0x3b, 0xce, 0x84, 0x80, 0xde, 0x3f, 0xf0, 0x2b, 0x2a,
	0x78, 0x28, 0x38, 0xdc, 0x69, 0x9e, 0x9c, 0x9d, 0x20, 0xd5, 0x86, 0x77, 0xf6, 0x92, 0x5f, 0x8b,
	0x94, 0x9d, 0x2f, 0x52, 0xf6, 0x67, 0x91, 0xb2, 0x9f, 0xcb, 0x34, 0x38, 0x5f, 0xa6, 0xc1, 0xef,
	0x65, 0x1a, 0x14, 0x1b, 0xee, 0xcf, 0x79, 0xfa, 0x37, 0x00, 0x00, 0xff, 0xff, 0x8c, 0x22, 0xfd,
	0x67, 0x5c, 0x03, 0x00, 0x00,
}

func (m *ResourceError) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ResourceError) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ResourceError) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.BaseError != nil {
		{
			size, err := m.BaseError.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintResource(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintResource(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x12
	}
	if m.ErrorCode != 0 {
		i = encodeVarintResource(dAtA, i, uint64(m.ErrorCode))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *CreateResourceRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateResourceRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateResourceRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.JobId) > 0 {
		i -= len(m.JobId)
		copy(dAtA[i:], m.JobId)
		i = encodeVarintResource(dAtA, i, uint64(len(m.JobId)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.WorkerId) > 0 {
		i -= len(m.WorkerId)
		copy(dAtA[i:], m.WorkerId)
		i = encodeVarintResource(dAtA, i, uint64(len(m.WorkerId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ExecutorId) > 0 {
		i -= len(m.ExecutorId)
		copy(dAtA[i:], m.ExecutorId)
		i = encodeVarintResource(dAtA, i, uint64(len(m.ExecutorId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ResourceId) > 0 {
		i -= len(m.ResourceId)
		copy(dAtA[i:], m.ResourceId)
		i = encodeVarintResource(dAtA, i, uint64(len(m.ResourceId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CreateResourceResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateResourceResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateResourceResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Error != nil {
		{
			size, err := m.Error.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintResource(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UpdateResourceRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdateResourceRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpdateResourceRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.LeaseType != 0 {
		i = encodeVarintResource(dAtA, i, uint64(m.LeaseType))
		i--
		dAtA[i] = 0x18
	}
	if len(m.WorkerId) > 0 {
		i -= len(m.WorkerId)
		copy(dAtA[i:], m.WorkerId)
		i = encodeVarintResource(dAtA, i, uint64(len(m.WorkerId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ResourceId) > 0 {
		i -= len(m.ResourceId)
		copy(dAtA[i:], m.ResourceId)
		i = encodeVarintResource(dAtA, i, uint64(len(m.ResourceId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UpdateResourceResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdateResourceResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpdateResourceResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Error != nil {
		{
			size, err := m.Error.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintResource(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintResource(dAtA []byte, offset int, v uint64) int {
	offset -= sovResource(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ResourceError) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ErrorCode != 0 {
		n += 1 + sovResource(uint64(m.ErrorCode))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovResource(uint64(l))
	}
	if m.BaseError != nil {
		l = m.BaseError.Size()
		n += 1 + l + sovResource(uint64(l))
	}
	return n
}

func (m *CreateResourceRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ResourceId)
	if l > 0 {
		n += 1 + l + sovResource(uint64(l))
	}
	l = len(m.ExecutorId)
	if l > 0 {
		n += 1 + l + sovResource(uint64(l))
	}
	l = len(m.WorkerId)
	if l > 0 {
		n += 1 + l + sovResource(uint64(l))
	}
	l = len(m.JobId)
	if l > 0 {
		n += 1 + l + sovResource(uint64(l))
	}
	return n
}

func (m *CreateResourceResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Error != nil {
		l = m.Error.Size()
		n += 1 + l + sovResource(uint64(l))
	}
	return n
}

func (m *UpdateResourceRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ResourceId)
	if l > 0 {
		n += 1 + l + sovResource(uint64(l))
	}
	l = len(m.WorkerId)
	if l > 0 {
		n += 1 + l + sovResource(uint64(l))
	}
	if m.LeaseType != 0 {
		n += 1 + sovResource(uint64(m.LeaseType))
	}
	return n
}

func (m *UpdateResourceResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Error != nil {
		l = m.Error.Size()
		n += 1 + l + sovResource(uint64(l))
	}
	return n
}

func sovResource(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozResource(x uint64) (n int) {
	return sovResource(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ResourceError) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResource
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ResourceError: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ResourceError: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ErrorCode", wireType)
			}
			m.ErrorCode = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResource
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ErrorCode |= ResourceErrorCode(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResource
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthResource
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthResource
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BaseError", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResource
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResource
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResource
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BaseError == nil {
				m.BaseError = &Error{}
			}
			if err := m.BaseError.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipResource(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResource
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateResourceRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResource
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateResourceRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateResourceRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResource
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthResource
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthResource
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResourceId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExecutorId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResource
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthResource
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthResource
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ExecutorId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WorkerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResource
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthResource
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthResource
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WorkerId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JobId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResource
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthResource
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthResource
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.JobId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipResource(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResource
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateResourceResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResource
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateResourceResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateResourceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Error", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResource
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResource
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResource
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Error == nil {
				m.Error = &ResourceError{}
			}
			if err := m.Error.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipResource(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResource
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpdateResourceRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResource
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdateResourceRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdateResourceRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResource
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthResource
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthResource
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResourceId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WorkerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResource
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthResource
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthResource
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WorkerId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LeaseType", wireType)
			}
			m.LeaseType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResource
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LeaseType |= ResourceLeaseType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipResource(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResource
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpdateResourceResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResource
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdateResourceResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdateResourceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Error", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResource
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResource
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResource
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Error == nil {
				m.Error = &ResourceError{}
			}
			if err := m.Error.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipResource(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResource
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipResource(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowResource
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowResource
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowResource
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthResource
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupResource
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthResource
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthResource        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowResource          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupResource = fmt.Errorf("proto: unexpected end of group")
)
